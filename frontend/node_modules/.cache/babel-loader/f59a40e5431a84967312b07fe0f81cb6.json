{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaoc\\\\Desktop\\\\TQS\\\\tqs-final-project\\\\frontend\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst CabeleireirosContext = React.createContext();\n\nclass CabeleireirosProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cabeleireiros: [],\n      sortedCabeleireiros: [],\n      loading: true,\n      nome: \"\",\n      cidade: \"\"\n    };\n\n    this.getCabeleireiro = slug => {\n      let tempCabeleireiros = [...this.state.cabeleireiros];\n      const cabeleireiro = tempCabeleireiros.find(cabeleireiro => cabeleireiro.slug === slug);\n      return cabeleireiro;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.nome === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterCabeleireiros);\n    };\n\n    this.filterCabeleireiros = () => {\n      let {\n        cabeleireiros,\n        nome,\n        cidade\n      } = this.state; // all the cabeleireiros\n\n      let tempCabeleireiros = [...cabeleireiros]; // filter by nome \n\n      if (nome !== \"\") {\n        tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.nome === nome);\n      } // filter by cidade\n\n\n      if (cidade !== \"\") {\n        tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.cidade === cidade);\n      } // change state \n\n\n      this.setState({\n        sortedCabeleireiros: tempCabeleireiros\n      });\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    // this.getData\n    let cabeleireiros = this.formatData(items);\n    this.setState({\n      cabeleireiros,\n      sortedCabeleireiros: cabeleireiros,\n      loading: false\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let imagens = item.fields.imagens.map(image => image.fields.file.url);\n      let cabeleireiro = { ...item.fields,\n        imagens,\n        id\n      };\n      return cabeleireiro;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CabeleireirosContext.Provider, {\n      value: { ...this.state,\n        getCabeleireiro: this.getCabeleireiro,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst CabeleireirosConsumer = CabeleireirosContext.Consumer;\nexport function withCabeleireirosConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(CabeleireirosConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { CabeleireirosProvider, CabeleireirosConsumer, CabeleireirosContext };","map":{"version":3,"sources":["C:/Users/joaoc/Desktop/TQS/tqs-final-project/frontend/src/context.js"],"names":["React","Component","items","CabeleireirosContext","createContext","CabeleireirosProvider","state","cabeleireiros","sortedCabeleireiros","loading","nome","cidade","getCabeleireiro","slug","tempCabeleireiros","cabeleireiro","find","handleChange","event","target","value","checked","name","setState","filterCabeleireiros","filter","componentDidMount","formatData","tempItems","map","item","id","sys","imagens","fields","image","file","url","render","props","children","CabeleireirosConsumer","Consumer","withCabeleireirosConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport items from './data'\r\n\r\nconst CabeleireirosContext = React.createContext();\r\n\r\nclass CabeleireirosProvider extends Component {\r\n\r\n    state = {\r\n        cabeleireiros: [],\r\n        sortedCabeleireiros: [],\r\n        \r\n        loading: true,\r\n        nome:\"\",\r\n        cidade:\"\",\r\n    };\r\n    // getData\r\n\r\n    componentDidMount() {\r\n        // this.getData\r\n        let cabeleireiros = this.formatData(items);\r\n        \r\n    \r\n\r\n        this.setState({\r\n            cabeleireiros,\r\n            \r\n            sortedCabeleireiros: cabeleireiros,\r\n            loading: false,\r\n            \r\n        });\r\n    }\r\n\r\n    formatData(items) {\r\n        let tempItems = items.map(item => {\r\n            let id = item.sys.id\r\n            let imagens = item.fields.imagens.map(image =>\r\n                image.fields.file.url);\r\n\r\n            let cabeleireiro = { ...item.fields, imagens, id }\r\n            return cabeleireiro;\r\n        });\r\n        return tempItems\r\n    }\r\n    getCabeleireiro = (slug) => {\r\n        let tempCabeleireiros = [...this.state.cabeleireiros];\r\n        const cabeleireiro = tempCabeleireiros.find(cabeleireiro => cabeleireiro.slug === slug);\r\n        return cabeleireiro;\r\n    };\r\nhandleChange = event => {\r\n    const target = event.target;\r\n    const value = target.nome === 'checkbox' ?\r\n    target.checked : target.value;\r\n    const name = event.target.name;\r\n   this.setState({\r\n      [name] :value \r\n   },\r\n    this.filterCabeleireiros\r\n    );\r\n};\r\nfilterCabeleireiros = () => {\r\n    let{\r\n        cabeleireiros, \r\n        nome,\r\n        cidade,\r\n    } = this.state\r\n\r\n// all the cabeleireiros\r\nlet tempCabeleireiros = [...cabeleireiros];\r\n\r\n\r\n// filter by nome \r\n\r\nif(nome !== \"\") {\r\n    tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.nome ===\r\n    nome);\r\n}\r\n\r\n\r\n\r\n// filter by cidade\r\nif(cidade !== \"\") {\r\n    tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.cidade ===\r\n    cidade);\r\n}\r\n\r\n\r\n\r\n// change state \r\nthis.setState({\r\n    sortedCabeleireiros:tempCabeleireiros\r\n})\r\n};\r\n    render() {\r\n        return (\r\n        <CabeleireirosContext.Provider \r\n        value={{\r\n            ...this.state,\r\n            getCabeleireiro: this.getCabeleireiro,\r\n            handleChange: this.handleChange\r\n            }}>\r\n            {this.props.children}\r\n        </CabeleireirosContext.Provider>\r\n            \r\n         );\r\n    }\r\n  }\r\n\r\n\r\nconst CabeleireirosConsumer = CabeleireirosContext.Consumer;\r\nexport function withCabeleireirosConsumer(Component){\r\n    return function ConsumerWrapper(props){\r\n        return <CabeleireirosConsumer>\r\n            {value => <Component {...props} context={value} />}\r\n        </CabeleireirosConsumer>\r\n    }\r\n}\r\n\r\nexport { CabeleireirosProvider, CabeleireirosConsumer, CabeleireirosContext };"]},"metadata":{},"sourceType":"module"}