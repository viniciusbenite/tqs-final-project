{"ast":null,"code":"import _toConsumableArray from\"/home/alina/Documents/tqs-final-project-frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import{useContext}from'react';import{CabeleireirosContext}from'../context';import Title from'./Title';// get all unique values\\\nvar getUnique=function getUnique(items,value){return _toConsumableArray(new Set(items.map(function(item){return item[value];})));};export default function BarbeirosFilter(_ref){var barbeiros=_ref.barbeiros;var context=useContext(CabeleireirosContext);console.log(context);var handleChangeBarbeiros=context.handleChangeBarbeiros,nome=context.nome,cidade=context.cidade;// Get unique types\nvar nomes=getUnique(barbeiros,'nome');// add all\nnomes=[\"todos\"].concat(_toConsumableArray(nomes));// map to jsx\nnomes=nomes.map(function(item,index){return/*#__PURE__*/React.createElement(\"option\",{value:item,key:index},item);});var cidades=getUnique(barbeiros,'cidade');cidades=[\"todas\"].concat(_toConsumableArray(cidades));// map to jsx\ncidades=cidades.map(function(item,index){return/*#__PURE__*/React.createElement(\"option\",{value:item,key:index},item);});return/*#__PURE__*/React.createElement(\"section\",{className:\"filter-container\"},/*#__PURE__*/React.createElement(Title,{title:\"procure por nome ou cidade\"}),/*#__PURE__*/React.createElement(\"form\",{className:\"filter-form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"nome\"},\"Nome\"),/*#__PURE__*/React.createElement(\"div\",{className:\"search-inputs\"},/*#__PURE__*/React.createElement(\"input\",{type:\"String\",name:\"nome\",id:\"nome\",value:nome,onChange:handleChangeBarbeiros,className:\"search-input\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"cidade\"},\"cidade\"),/*#__PURE__*/React.createElement(\"div\",{className:\"cidade-inputs\"},/*#__PURE__*/React.createElement(\"input\",{type:\"String\",name:\"cidade\",id:\"cidade\",value:cidade,onChange:handleChangeBarbeiros,className:\"search-input\"})))));}","map":{"version":3,"sources":["/home/alina/Documents/tqs-final-project-frontend/frontend/src/components/BarbeirosFilter.js"],"names":["React","useContext","CabeleireirosContext","Title","getUnique","items","value","Set","map","item","BarbeirosFilter","barbeiros","context","console","log","handleChangeBarbeiros","nome","cidade","nomes","index","cidades"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,KAAyB,OAAzB,CACA,OAAQC,oBAAR,KAAmC,YAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAQC,KAAR,CAAkB,CAChC,0BAAW,GAAIC,CAAAA,GAAJ,CAAQF,KAAK,CAACG,GAAN,CAAU,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACH,KAAD,CAAR,EAAd,CAAR,CAAX,EACH,CAFD,CAGA,cAAe,SAASI,CAAAA,eAAT,MAAsC,IAAZC,CAAAA,SAAY,MAAZA,SAAY,CACrD,GAAMC,CAAAA,OAAO,CAAGX,UAAU,CAACC,oBAAD,CAA1B,CACAW,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAFqD,GAIjDG,CAAAA,qBAJiD,CAQjDH,OARiD,CAIjDG,qBAJiD,CAKjDC,IALiD,CAQjDJ,OARiD,CAKjDI,IALiD,CAMjDC,MANiD,CAQjDL,OARiD,CAMjDK,MANiD,CASrD;AAGA,GAAIC,CAAAA,KAAK,CAAGd,SAAS,CAACO,SAAD,CAAY,MAAZ,CAArB,CAEA;AACAO,KAAK,EAAI,OAAJ,4BAAgBA,KAAhB,EAAL,CACA;AACAA,KAAK,CAAGA,KAAK,CAACV,GAAN,CAAU,SAACC,IAAD,CAAOU,KAAP,CAAe,CAC7B,mBACA,8BAAQ,KAAK,CAAEV,IAAf,CAAqB,GAAG,CAAEU,KAA1B,EACCV,IADD,CADA,CAKH,CANO,CAAR,CAQA,GAAIW,CAAAA,OAAO,CAAGhB,SAAS,CAACO,SAAD,CAAY,QAAZ,CAAvB,CAEAS,OAAO,EAAI,OAAJ,4BAAgBA,OAAhB,EAAP,CACA;AACAA,OAAO,CAAGA,OAAO,CAACZ,GAAR,CAAY,SAACC,IAAD,CAAOU,KAAP,CAAe,CACjC,mBACA,8BAAQ,KAAK,CAAEV,IAAf,CAAqB,GAAG,CAAEU,KAA1B,EACCV,IADD,CADA,CAKH,CANS,CAAV,CASI,mBACA,+BAAS,SAAS,CAAC,kBAAnB,eACI,oBAAC,KAAD,EAAO,KAAK,CAAC,4BAAb,EADJ,cAEI,4BAAM,SAAS,CAAC,aAAhB,eAEA,2BAAK,SAAS,CAAC,YAAf,eACR,6BAAO,OAAO,CAAC,MAAf,SADQ,cAER,2BAAK,SAAS,CAAC,eAAf,eACC,6BAAO,IAAI,CAAC,QAAZ,CAAqB,IAAI,CAAC,MAA1B,CAAiC,EAAE,CAAC,MAApC,CACA,KAAK,CAAEO,IADP,CACa,QAAQ,CAAED,qBADvB,CAGA,SAAS,CAAC,cAHV,EADD,CAFQ,CAFA,cAYR,2BAAK,SAAS,CAAC,YAAf,eACA,6BAAO,OAAO,CAAC,QAAf,WADA,cAEA,2BAAK,SAAS,CAAC,eAAf,eACC,6BAAO,IAAI,CAAC,QAAZ,CAAqB,IAAI,CAAC,QAA1B,CAAmC,EAAE,CAAC,QAAtC,CACA,KAAK,CAAEE,MADP,CACe,QAAQ,CAAEF,qBADzB,CAGA,SAAS,CAAC,cAHV,EADD,CAFA,CAZQ,CAFJ,CADA,CAgCH","sourcesContent":["import React from 'react'\nimport {useContext} from 'react';\nimport {CabeleireirosContext} from '../context';\nimport Title from './Title';\n// get all unique values\\\nconst getUnique = (items, value) => {\n    return [...new Set(items.map(item => item[value]))]\n}\nexport default function BarbeirosFilter({barbeiros}) {\nconst context = useContext(CabeleireirosContext);\nconsole.log(context);\nconst {\n    handleChangeBarbeiros,\n    nome,\n    cidade,\n  \n} = context;\n// Get unique types\n\n\nlet nomes = getUnique(barbeiros, 'nome');\n\n// add all\nnomes = [\"todos\", ...nomes];\n// map to jsx\nnomes = nomes.map((item, index)=>{\n    return( \n    <option value={item} key={index}>\n    {item}\n    </option>\n);\n});\n\nlet cidades = getUnique(barbeiros, 'cidade');\n\ncidades = [\"todas\", ...cidades];\n// map to jsx\ncidades = cidades.map((item, index)=>{\n    return( \n    <option value={item} key={index}>\n    {item}\n    </option>\n);\n});\n\n\n    return (\n    <section className=\"filter-container\">\n        <Title title=\"procure por nome ou cidade\" />\n        <form className=\"filter-form\">\n\n        <div className=\"form-group\">\n<label htmlFor=\"nome\">Nome</label>\n<div className=\"search-inputs\">\n <input type=\"String\" name=\"nome\" id=\"nome\"\n value={nome} onChange={handleChangeBarbeiros}\n \n className=\"search-input\"/>  \n</div>\n</div>\n\n<div className=\"form-group\">\n<label htmlFor=\"cidade\">cidade</label>\n<div className=\"cidade-inputs\">\n <input type=\"String\" name=\"cidade\" id=\"cidade\"\n value={cidade} onChange={handleChangeBarbeiros}\n \n className=\"search-input\"/>  \n</div>\n</div>\n\n\n\n\n\n</form>\n</section>\n);  \n}\n"]},"metadata":{},"sourceType":"module"}