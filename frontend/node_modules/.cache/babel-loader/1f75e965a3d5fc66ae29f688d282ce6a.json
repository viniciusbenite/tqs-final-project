{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/UA-3ANO/TQS/projeto_final/tqs-final-project/frontend/src/pages/ReservasDono.js\";\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport NavbarDono from \"../components/NavbarDono\";\nimport api from \"../services/api\";\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    opacity: 1,\n    flexDirection: 'column'\n  },\n  cardDone: {\n    height: '100%',\n    display: 'flex',\n    opacity: 0.4,\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '0%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\nconst cards = [1, 2, 3, 4];\nconst isDone = [true, false, false, false];\nconst classes = useStyles;\nexport default class Album extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reservas: []\n    };\n  }\n\n  componentDidMount() {\n    this.GetReservations();\n  }\n\n  GetReservations() {\n    api.get(\"/reservation\").then(res => {\n      let dataRes = res.data;\n\n      for (const n in dataRes) {\n        if (dataRes[n].services.saloon.owner.email == localStorage.getItem(\"user_email\")) {\n          this.setState(prevState => ({\n            reservas: [...prevState.reservas, dataRes[n]]\n          }));\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(NavbarDono, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.heroContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h5\",\n      variant: \"h4\",\n      align: \"center\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      align: \"center\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"A reservas efetuadas nos meus sal\\xF5es:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.heroButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, this.state.reservas.map((e, key) => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: key,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: isDone[cards.indexOf(key)] ? classes.cardDone : classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      component: \"img\",\n      className: classes.cardMedia,\n      src: require('../images/cabeleireiro1.jpg'),\n      title: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, e.service.saloon.name, \" - \", e.service.saloon.city), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Data: \", e.date), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"Hora: \", e.time), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"Servi\\xE7o: \", e.service.name), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Cliente: \", e.users.name)))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/alina/Desktop/UA-3ANO/TQS/projeto_final/tqs-final-project/frontend/src/pages/ReservasDono.js"],"names":["React","Component","Card","CardContent","CardMedia","CssBaseline","Grid","Typography","makeStyles","Container","NavbarDono","api","useStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","opacity","flexDirection","cardDone","cardMedia","cardContent","flexGrow","footer","cards","isDone","classes","Album","state","reservas","componentDidMount","GetReservations","get","then","res","dataRes","data","n","services","saloon","owner","email","localStorage","getItem","setState","prevState","render","map","e","key","indexOf","require","service","name","city","date","time","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport NavbarDono from \"../components/NavbarDono\";\nimport api from \"../services/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    \n    display: 'flex',\n    opacity: 1,\n    flexDirection: 'column',\n  },\n  cardDone: {\n    height: '100%',\n    \n    display: 'flex',\n    opacity: 0.4,\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    \n    paddingTop: '0%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    \n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4];\nconst isDone=[true,false,false,false];\nconst classes = useStyles;\n\nexport default class Album extends Component{\n\n  state={\n    reservas: [],\n  };\n\n  componentDidMount() {\n    this.GetReservations();\n  }\n  GetReservations() {\n    api.get(\"/reservation\").then(res => {\n      let dataRes = res.data;\n      for (const n in dataRes) {\n        if(dataRes[n].services.saloon.owner.email == localStorage.getItem(\"user_email\")){\n          this.setState(prevState =>({\n            reservas: [...prevState.reservas, dataRes[n]]\n          }))\n        }\n      }\n\n    });\n  }\n\n  render() {\n\n  return (\n    <React.Fragment>\n         <NavbarDono></NavbarDono>\n      <CssBaseline />\n\n      <main>\n     \n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h5\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            </Typography>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n             A reservas efetuadas nos meus salões:\n            </Typography>\n            <div className={classes.heroButtons}>\n              \n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {this.state.reservas.map((e,key) => (\n              <Grid item key={key} xs={12} sm={6} md={3}>\n              \n                <Card className= {isDone[cards.indexOf(key)]?classes.cardDone:classes.card}>\n                 \n                  <CardMedia\n                  component=\"img\"\n                    className={classes.cardMedia}\n                    \n                    src={require('../images/cabeleireiro1.jpg')}\n                    title=\"\"\n                    \n                    \n                  />\n                  \n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {e.service.saloon.name} - {e.service.saloon.city}\n                    </Typography>\n                    <Typography>\n                        Data: {e.date}\n                    </Typography>\n                    <Typography>\n                        Hora: {e.time}\n                    </Typography>\n                    <Typography>\n                     Serviço: {e.service.name}\n                    </Typography>\n                    <Typography>\n                      Cliente: {e.users.name}\n                    </Typography>\n                  \n                  </CardContent>\n                 \n                    \n               \n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      \n    </React.Fragment>\n  )};\n}\n"]},"metadata":{},"sourceType":"module"}