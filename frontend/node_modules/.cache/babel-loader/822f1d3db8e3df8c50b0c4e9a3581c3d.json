{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDayOfWeek = getDayOfWeek;\nexports.getBeginOfCenturyYear = getBeginOfCenturyYear;\nexports.getBeginOfDecadeYear = getBeginOfDecadeYear;\nexports.getBeginOfWeek = getBeginOfWeek;\nexports.getWeekNumber = getWeekNumber;\nexports.getBegin = getBegin;\nexports.getBeginPrevious = getBeginPrevious;\nexports.getBeginNext = getBeginNext;\nexports.getEnd = getEnd;\nexports.getEndPrevious = getEndPrevious;\nexports.getRange = getRange;\nexports.getValueRange = getValueRange;\nexports.getCenturyLabel = getCenturyLabel;\nexports.getDecadeLabel = getDecadeLabel;\nexports.isWeekend = isWeekend;\nexports.getEndPrevious2 = exports.getBeginNext2 = exports.getBeginPrevious2 = void 0;\n\nvar _dateUtils = require(\"@wojtekmaj/date-utils\");\n\nvar _const = require(\"./const\");\n\nvar _dateFormatter = require(\"./dateFormatter\");\n\nvar SUNDAY = _const.WEEKDAYS[0];\nvar FRIDAY = _const.WEEKDAYS[5];\nvar SATURDAY = _const.WEEKDAYS[6];\n/* Simple getters - getting a property of a given point in time */\n\nfunction getDayOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ISO_8601:\n      // Shifts days of the week so that Monday is 0, Sunday is 6\n      return (weekday + 6) % 7;\n\n    case _const.CALENDAR_TYPES.ARABIC:\n      return (weekday + 1) % 7;\n\n    case _const.CALENDAR_TYPES.HEBREW:\n    case _const.CALENDAR_TYPES.US:\n      return weekday;\n\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}\n/**\n * Century\n */\n\n\nfunction getBeginOfCenturyYear(date) {\n  var beginOfCentury = (0, _dateUtils.getCenturyStart)(date);\n  return (0, _dateUtils.getYear)(beginOfCentury);\n}\n/**\n * Decade\n */\n\n\nfunction getBeginOfDecadeYear(date) {\n  var beginOfDecade = (0, _dateUtils.getDecadeStart)(date);\n  return (0, _dateUtils.getYear)(beginOfDecade);\n}\n/**\n * Week\n */\n\n/**\n * Returns the beginning of a given week.\n *\n * @param {Date} date Date.\n * @param {String} calendarType Calendar type. Can be ISO 8601 or US.\n */\n\n\nfunction getBeginOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var year = (0, _dateUtils.getYear)(date);\n  var monthIndex = (0, _dateUtils.getMonth)(date);\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\n  return new Date(year, monthIndex, day);\n}\n/**\n * Gets week number according to ISO 8601 or US standard.\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\n * In US calendar week 1 is the one with January 1.\n *\n * @param {Date} date Date.\n * @param {String} calendarType Calendar type. Can be ISO 8601 or US.\n */\n\n\nfunction getWeekNumber(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var calendarTypeForWeekNumber = calendarType === _const.CALENDAR_TYPES.US ? _const.CALENDAR_TYPES.US : _const.CALENDAR_TYPES.ISO_8601;\n  var beginOfWeek = getBeginOfWeek(date, calendarTypeForWeekNumber);\n  var year = (0, _dateUtils.getYear)(date) + 1;\n  var dayInWeekOne;\n  var beginOfFirstWeek; // Look for the first week one that does not come after a given date\n\n  do {\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === _const.CALENDAR_TYPES.ISO_8601 ? 4 : 1);\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarTypeForWeekNumber);\n    year -= 1;\n  } while (date - beginOfFirstWeek < 0);\n\n  return Math.round((beginOfWeek - beginOfFirstWeek) / (8.64e7 * 7)) + 1;\n}\n/**\n * Others\n */\n\n/**\n * Returns the beginning of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nfunction getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthStart)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nfunction getBeginPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nfunction getBeginNext(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getNextCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nvar getBeginPrevious2 = function getBeginPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date, -100);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date, -10);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date, -12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getBeginPrevious2 = getBeginPrevious2;\n\nvar getBeginNext2 = function getBeginNext2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date, 100);\n\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date, 10);\n\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date, 12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\n * Returns the end of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nexports.getBeginNext2 = getBeginNext2;\n\nfunction getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyEnd)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeEnd)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearEnd)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthEnd)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayEnd)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nfunction getEndPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyEnd)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nvar getEndPrevious2 = function getEndPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date, -100);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date, -10);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date, -12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\n * Returns an array with the beginning and the end of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nexports.getEndPrevious2 = getEndPrevious2;\n\nfunction getRange(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyRange)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeRange)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearRange)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthRange)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayRange)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n/**\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date1 First date.\n * @param {Date} date2 Second date.\n */\n\n\nfunction getValueRange(rangeType, date1, date2) {\n  var rawNextValue = [date1, date2].sort(function (a, b) {\n    return a - b;\n  });\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n}\n\nfunction toYearLabel(locale) {\n  var formatYear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _dateFormatter.formatYear;\n  var dates = arguments.length > 2 ? arguments[2] : undefined;\n  return dates.map(function (date) {\n    return formatYear(locale, date);\n  }).join(' â€“ ');\n}\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2001-2100.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\n\n\nfunction getCenturyLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getCenturyRange)(date));\n}\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2011-2020.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\n\n\nfunction getDecadeLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getDecadeRange)(date));\n}\n/**\n * Returns a boolean determining whether a given date is on Saturday or Sunday.\n *\n * @param {Date} date Date.\n */\n\n\nfunction isWeekend(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ARABIC:\n    case _const.CALENDAR_TYPES.HEBREW:\n      return weekday === FRIDAY || weekday === SATURDAY;\n\n    case _const.CALENDAR_TYPES.ISO_8601:\n    case _const.CALENDAR_TYPES.US:\n      return weekday === SATURDAY || weekday === SUNDAY;\n\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}","map":{"version":3,"sources":["C:/Users/joaoc/Desktop/TQS/tqs-final-project/frontend/node_modules/react-calendar/dist/umd/shared/dates.js"],"names":["Object","defineProperty","exports","value","getDayOfWeek","getBeginOfCenturyYear","getBeginOfDecadeYear","getBeginOfWeek","getWeekNumber","getBegin","getBeginPrevious","getBeginNext","getEnd","getEndPrevious","getRange","getValueRange","getCenturyLabel","getDecadeLabel","isWeekend","getEndPrevious2","getBeginNext2","getBeginPrevious2","_dateUtils","require","_const","_dateFormatter","SUNDAY","WEEKDAYS","FRIDAY","SATURDAY","date","calendarType","arguments","length","undefined","CALENDAR_TYPES","ISO_8601","weekday","getDay","ARABIC","HEBREW","US","Error","beginOfCentury","getCenturyStart","getYear","beginOfDecade","getDecadeStart","year","monthIndex","getMonth","day","getDate","Date","calendarTypeForWeekNumber","beginOfWeek","dayInWeekOne","beginOfFirstWeek","Math","round","rangeType","getYearStart","getMonthStart","getDayStart","concat","getPreviousCenturyStart","getPreviousDecadeStart","getPreviousYearStart","getPreviousMonthStart","getNextCenturyStart","getNextDecadeStart","getNextYearStart","getNextMonthStart","getCenturyEnd","getDecadeEnd","getYearEnd","getMonthEnd","getDayEnd","getPreviousCenturyEnd","getPreviousDecadeEnd","getPreviousYearEnd","getPreviousMonthEnd","getCenturyRange","getDecadeRange","getYearRange","getMonthRange","getDayRange","date1","date2","rawNextValue","sort","a","b","toYearLabel","locale","formatYear","dates","map","join"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDayOfWeek = getDayOfWeek;\nexports.getBeginOfCenturyYear = getBeginOfCenturyYear;\nexports.getBeginOfDecadeYear = getBeginOfDecadeYear;\nexports.getBeginOfWeek = getBeginOfWeek;\nexports.getWeekNumber = getWeekNumber;\nexports.getBegin = getBegin;\nexports.getBeginPrevious = getBeginPrevious;\nexports.getBeginNext = getBeginNext;\nexports.getEnd = getEnd;\nexports.getEndPrevious = getEndPrevious;\nexports.getRange = getRange;\nexports.getValueRange = getValueRange;\nexports.getCenturyLabel = getCenturyLabel;\nexports.getDecadeLabel = getDecadeLabel;\nexports.isWeekend = isWeekend;\nexports.getEndPrevious2 = exports.getBeginNext2 = exports.getBeginPrevious2 = void 0;\n\nvar _dateUtils = require(\"@wojtekmaj/date-utils\");\n\nvar _const = require(\"./const\");\n\nvar _dateFormatter = require(\"./dateFormatter\");\n\nvar SUNDAY = _const.WEEKDAYS[0];\nvar FRIDAY = _const.WEEKDAYS[5];\nvar SATURDAY = _const.WEEKDAYS[6];\n/* Simple getters - getting a property of a given point in time */\n\nfunction getDayOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ISO_8601:\n      // Shifts days of the week so that Monday is 0, Sunday is 6\n      return (weekday + 6) % 7;\n\n    case _const.CALENDAR_TYPES.ARABIC:\n      return (weekday + 1) % 7;\n\n    case _const.CALENDAR_TYPES.HEBREW:\n    case _const.CALENDAR_TYPES.US:\n      return weekday;\n\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}\n/**\n * Century\n */\n\n\nfunction getBeginOfCenturyYear(date) {\n  var beginOfCentury = (0, _dateUtils.getCenturyStart)(date);\n  return (0, _dateUtils.getYear)(beginOfCentury);\n}\n/**\n * Decade\n */\n\n\nfunction getBeginOfDecadeYear(date) {\n  var beginOfDecade = (0, _dateUtils.getDecadeStart)(date);\n  return (0, _dateUtils.getYear)(beginOfDecade);\n}\n/**\n * Week\n */\n\n/**\n * Returns the beginning of a given week.\n *\n * @param {Date} date Date.\n * @param {String} calendarType Calendar type. Can be ISO 8601 or US.\n */\n\n\nfunction getBeginOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var year = (0, _dateUtils.getYear)(date);\n  var monthIndex = (0, _dateUtils.getMonth)(date);\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\n  return new Date(year, monthIndex, day);\n}\n/**\n * Gets week number according to ISO 8601 or US standard.\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\n * In US calendar week 1 is the one with January 1.\n *\n * @param {Date} date Date.\n * @param {String} calendarType Calendar type. Can be ISO 8601 or US.\n */\n\n\nfunction getWeekNumber(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var calendarTypeForWeekNumber = calendarType === _const.CALENDAR_TYPES.US ? _const.CALENDAR_TYPES.US : _const.CALENDAR_TYPES.ISO_8601;\n  var beginOfWeek = getBeginOfWeek(date, calendarTypeForWeekNumber);\n  var year = (0, _dateUtils.getYear)(date) + 1;\n  var dayInWeekOne;\n  var beginOfFirstWeek; // Look for the first week one that does not come after a given date\n\n  do {\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === _const.CALENDAR_TYPES.ISO_8601 ? 4 : 1);\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarTypeForWeekNumber);\n    year -= 1;\n  } while (date - beginOfFirstWeek < 0);\n\n  return Math.round((beginOfWeek - beginOfFirstWeek) / (8.64e7 * 7)) + 1;\n}\n/**\n * Others\n */\n\n/**\n * Returns the beginning of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nfunction getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthStart)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nfunction getBeginPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nfunction getBeginNext(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getNextCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nvar getBeginPrevious2 = function getBeginPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeStart)(date, -100);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearStart)(date, -10);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthStart)(date, -12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getBeginPrevious2 = getBeginPrevious2;\n\nvar getBeginNext2 = function getBeginNext2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getNextDecadeStart)(date, 100);\n\n    case 'year':\n      return (0, _dateUtils.getNextYearStart)(date, 10);\n\n    case 'month':\n      return (0, _dateUtils.getNextMonthStart)(date, 12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\n * Returns the end of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nexports.getBeginNext2 = getBeginNext2;\n\nfunction getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyEnd)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeEnd)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearEnd)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthEnd)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayEnd)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nfunction getEndPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getPreviousCenturyEnd)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n\nvar getEndPrevious2 = function getEndPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return (0, _dateUtils.getPreviousDecadeEnd)(date, -100);\n\n    case 'year':\n      return (0, _dateUtils.getPreviousYearEnd)(date, -10);\n\n    case 'month':\n      return (0, _dateUtils.getPreviousMonthEnd)(date, -12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\n * Returns an array with the beginning and the end of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nexports.getEndPrevious2 = getEndPrevious2;\n\nfunction getRange(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyRange)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeRange)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearRange)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthRange)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayRange)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n/**\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date1 First date.\n * @param {Date} date2 Second date.\n */\n\n\nfunction getValueRange(rangeType, date1, date2) {\n  var rawNextValue = [date1, date2].sort(function (a, b) {\n    return a - b;\n  });\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n}\n\nfunction toYearLabel(locale) {\n  var formatYear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _dateFormatter.formatYear;\n  var dates = arguments.length > 2 ? arguments[2] : undefined;\n  return dates.map(function (date) {\n    return formatYear(locale, date);\n  }).join(' â€“ ');\n}\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2001-2100.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\n\n\nfunction getCenturyLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getCenturyRange)(date));\n}\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2011-2020.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\n\n\nfunction getDecadeLabel(locale, formatYear, date) {\n  return toYearLabel(locale, formatYear, (0, _dateUtils.getDecadeRange)(date));\n}\n/**\n * Returns a boolean determining whether a given date is on Saturday or Sunday.\n *\n * @param {Date} date Date.\n */\n\n\nfunction isWeekend(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _const.CALENDAR_TYPES.ISO_8601;\n  var weekday = date.getDay();\n\n  switch (calendarType) {\n    case _const.CALENDAR_TYPES.ARABIC:\n    case _const.CALENDAR_TYPES.HEBREW:\n      return weekday === FRIDAY || weekday === SATURDAY;\n\n    case _const.CALENDAR_TYPES.ISO_8601:\n    case _const.CALENDAR_TYPES.US:\n      return weekday === SATURDAY || weekday === SUNDAY;\n\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n}"]},"metadata":{},"sourceType":"script"}