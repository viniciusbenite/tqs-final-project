{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaoc\\\\Desktop\\\\TQS\\\\tqs-final-project\\\\frontend\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport getSaloes from './data';\nimport getReservas from './dataRes';\nconst CabeleireirosContext = React.createContext();\n\nclass CabeleireirosProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cabeleireiros: [],\n      sortedCabeleireiros: [],\n      sortedReservas: [],\n      barbeiros: [],\n      sortedBarbeiros: [],\n      loading: true,\n      nome: \"\",\n      cidade: \"\"\n    };\n\n    this.getCabeleireiro = slug => {\n      let tempCabeleireiros = [...this.state.cabeleireiros];\n      const cabeleireiro = tempCabeleireiros.find(cabeleireiro => cabeleireiro.slug === slug);\n      return cabeleireiro;\n    };\n\n    this.getBarbeiro = slug => {\n      let tempBarbeiros = [...this.state.barbeiros];\n      const barbeiro = tempBarbeiros.find(barbeiro => barbeiro.slug === slug);\n      return barbeiro;\n    };\n\n    this.handleChangeCabeleireiros = event => {\n      const target = event.target;\n      const value = target.nome === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterCabeleireiros);\n    };\n\n    this.handleChangeBarbeiros = event => {\n      const target = event.target;\n      const value = target.nome === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterBarbeiros);\n    };\n\n    this.filterBarbeiros = () => {\n      let {\n        barbeiros,\n        nome,\n        cidade\n      } = this.state; // all the cabeleireiros\n\n      let tempBarbeiros = [...barbeiros]; // filter by nome \n\n      if (nome !== \"\") {\n        tempBarbeiros = tempBarbeiros.filter(barbeiro => barbeiro.nome === nome);\n      } // filter by cidade\n\n\n      if (cidade !== \"\") {\n        tempBarbeiros = tempBarbeiros.filter(barbeiro => barbeiro.cidade === cidade);\n      } // change state \n\n\n      this.setState({\n        sortedBarbeiros: tempBarbeiros\n      });\n    };\n\n    this.filterCabeleireiros = () => {\n      let {\n        cabeleireiros,\n        nome,\n        cidade\n      } = this.state; // all the cabeleireiros\n\n      let tempCabeleireiros = [...cabeleireiros]; // filter by nome \n\n      if (nome !== \"\") {\n        tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.nome === nome);\n      } // filter by cidade\n\n\n      if (cidade !== \"\") {\n        tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.cidade === cidade);\n      } // change state \n\n\n      this.setState({\n        sortedCabeleireiros: tempCabeleireiros\n      });\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    var cabeleireiros = [];\n    var barbeiros = [];\n    var reservas = [];\n    getReservas().then(data => {\n      reservas = this.formatDataReservas(data);\n      this.setState({\n        sortedReservas: reservas\n      });\n    });\n    getSaloes().then(data => {\n      cabeleireiros = this.formatDataCabeleireiros(data);\n      barbeiros = this.formatDataBarbeiros(data);\n      this.setState({\n        cabeleireiros: cabeleireiros,\n        barbeiros: barbeiros,\n        sortedBarbeiros: barbeiros,\n        sortedCabeleireiros: cabeleireiros,\n        loading: false\n      });\n    });\n  }\n\n  formatDataCabeleireiros(items) {\n    let tempItems = [];\n    items.map(item => {\n      let id = item.id;\n      let nome = item.name;\n      let slug = \"salao\";\n      let cidade = item.city;\n      let descricao = item.description;\n      let morada = item.address;\n      let imagens = [item.image];\n      let type = item.type;\n      let cabeleireiro = {\n        nome,\n        morada,\n        descricao,\n        slug,\n        cidade,\n        type,\n        imagens,\n        id\n      };\n      if (type == \"Cabeleireiro\") tempItems.push(cabeleireiro);\n    });\n    return tempItems;\n  }\n\n  formatDataReservas(items) {\n    let tempItems = [];\n    items.map(item => {\n      let id = item.id;\n      let data = item.date;\n      let cidade = item.city;\n      let descricao = item.description;\n      let morada = item.address;\n      let imagens = [item.image];\n      let type = item.type;\n      let reserva = {\n        nome,\n        morada,\n        descricao,\n        slug,\n        cidade,\n        type,\n        imagens,\n        id\n      };\n      if (type == \"Reserva\") tempItems.push(reserva);\n    });\n    return tempItems;\n  }\n\n  formatDataBarbeiros(items) {\n    let tempItems = [];\n    items.map(item => {\n      let id = item.id;\n      let nome = item.name;\n      let slug = \"salao\";\n      let cidade = item.city;\n      let descricao = item.description;\n      let morada = item.address;\n      let imagens = [item.image];\n      let type = item.type;\n      let barbeiro = {\n        nome,\n        morada,\n        descricao,\n        slug,\n        cidade,\n        type,\n        imagens,\n        id\n      };\n      if (type == \"Barbeiro\") tempItems.push(barbeiro);\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CabeleireirosContext.Provider, {\n      value: { ...this.state,\n        getCabeleireiro: this.getCabeleireiro,\n        handleChangeCabeleireiros: this.handleChangeCabeleireiros,\n        getBarbeiro: this.getBarbeiro,\n        handleChangeBarbeiros: this.handleChangeBarbeiros\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst CabeleireirosConsumer = CabeleireirosContext.Consumer;\nexport function withCabeleireirosConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(CabeleireirosConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { CabeleireirosProvider, CabeleireirosConsumer, CabeleireirosContext };\nexport class withReservasConsumer {}","map":{"version":3,"sources":["C:/Users/joaoc/Desktop/TQS/tqs-final-project/frontend/src/context.js"],"names":["React","Component","getSaloes","getReservas","CabeleireirosContext","createContext","CabeleireirosProvider","state","cabeleireiros","sortedCabeleireiros","sortedReservas","barbeiros","sortedBarbeiros","loading","nome","cidade","getCabeleireiro","slug","tempCabeleireiros","cabeleireiro","find","getBarbeiro","tempBarbeiros","barbeiro","handleChangeCabeleireiros","event","target","value","checked","name","setState","filterCabeleireiros","handleChangeBarbeiros","filterBarbeiros","filter","componentDidMount","reservas","then","data","formatDataReservas","formatDataCabeleireiros","formatDataBarbeiros","items","tempItems","map","item","id","city","descricao","description","morada","address","imagens","image","type","push","date","reserva","render","props","children","CabeleireirosConsumer","Consumer","withCabeleireirosConsumer","ConsumerWrapper","withReservasConsumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport getSaloes from './data';\r\nimport getReservas from './dataRes';\r\n\r\n\r\nconst CabeleireirosContext = React.createContext();\r\n\r\nclass CabeleireirosProvider extends Component {\r\n\r\n    state = {\r\n        cabeleireiros: [],\r\n        sortedCabeleireiros: [],\r\n        sortedReservas: [],\r\n        barbeiros:[],\r\n        sortedBarbeiros:[],\r\n        \r\n        loading: true,\r\n        nome:\"\",\r\n        cidade:\"\",\r\n    };\r\n    // getData\r\n\r\n    componentDidMount() {\r\n\r\n        var cabeleireiros=[];\r\n        var barbeiros=[];\r\n        var reservas=[];\r\n\r\n        getReservas().then(data =>{\r\n            reservas = this.formatDataReservas(data);\r\n            this.setState({\r\n                sortedReservas:reservas\r\n            })\r\n        })\r\n\r\n\r\n        getSaloes().then(data => {\r\n\r\n        cabeleireiros = this.formatDataCabeleireiros(data);\r\n        barbeiros = this.formatDataBarbeiros(data);\r\n\r\n        this.setState({\r\n            cabeleireiros:cabeleireiros,\r\n            barbeiros:barbeiros,\r\n            sortedBarbeiros:barbeiros,\r\n            \r\n            sortedCabeleireiros: cabeleireiros,\r\n            loading: false,\r\n            \r\n        });\r\n        });\r\n        \r\n    \r\n\r\n        \r\n    }\r\n\r\n    formatDataCabeleireiros(items) {\r\n\r\n        let tempItems=[];\r\n        \r\n        items.map(item => {\r\n            let id = item.id;\r\n            let nome = item.name;\r\n            let slug = \"salao\";\r\n            let cidade = item.city;\r\n            let descricao=item.description;\r\n            let morada=item.address;\r\n            let imagens = [item.image];\r\n            let type = item.type;\r\n\r\n            let cabeleireiro = {nome,morada,descricao,slug,cidade,type,imagens,id }\r\n            if(type==\"Cabeleireiro\") tempItems.push(cabeleireiro); \r\n            \r\n        });\r\n       \r\n       \r\n       \r\n      \r\n        return tempItems\r\n    }\r\n    formatDataReservas(items) {\r\n\r\n        let tempItems=[];\r\n\r\n        items.map(item => {\r\n            let id = item.id;\r\n            let data = item.date;\r\n            let cidade = item.city;\r\n            let descricao=item.description;\r\n            let morada=item.address;\r\n            let imagens = [item.image];\r\n            let type = item.type;\r\n\r\n            let reserva = {nome,morada,descricao,slug,cidade,type,imagens,id }\r\n            if(type==\"Reserva\") tempItems.push(reserva);\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n        return tempItems\r\n    }\r\n\r\n    formatDataBarbeiros(items) {\r\n\r\n        let tempItems=[];\r\n    \r\n        items.map(item => {\r\n            let id = item.id;\r\n            let nome = item.name;\r\n            let slug = \"salao\";\r\n            let cidade = item.city;\r\n            let descricao=item.description;\r\n            let morada=item.address;\r\n            let imagens = [item.image];\r\n            let type = item.type;\r\n\r\n            let barbeiro = {nome,morada,descricao,slug,cidade,type,imagens,id }\r\n            if(type==\"Barbeiro\") tempItems.push(barbeiro); \r\n            \r\n        });\r\n       \r\n       \r\n       \r\n      \r\n        return tempItems\r\n    }\r\n\r\n\r\n    getCabeleireiro = (slug) => {\r\n        let tempCabeleireiros = [...this.state.cabeleireiros];\r\n        const cabeleireiro = tempCabeleireiros.find(cabeleireiro => cabeleireiro.slug === slug);\r\n        return cabeleireiro;\r\n    };\r\n\r\n\r\n    getBarbeiro = (slug) => {\r\n        let tempBarbeiros = [...this.state.barbeiros];\r\n        const barbeiro = tempBarbeiros.find(barbeiro => barbeiro.slug === slug);\r\n        return barbeiro;\r\n    };\r\n\r\nhandleChangeCabeleireiros = event => {\r\n    const target = event.target;\r\n    const value = target.nome === 'checkbox' ?\r\n    target.checked : target.value;\r\n    const name = event.target.name;\r\n   this.setState({\r\n      [name] :value \r\n   },\r\n    this.filterCabeleireiros\r\n    );\r\n};\r\n\r\n\r\n    handleChangeBarbeiros = event => {\r\n        const target = event.target;\r\n        const value = target.nome === 'checkbox' ?\r\n        target.checked : target.value;\r\n        const name = event.target.name;\r\n    this.setState({\r\n        [name] :value \r\n    },\r\n        this.filterBarbeiros\r\n        );\r\n    };\r\n\r\n\r\n    filterBarbeiros = () => {\r\n        let{\r\n            barbeiros, \r\n            nome,\r\n            cidade,\r\n        } = this.state\r\n\r\n    // all the cabeleireiros\r\n    let tempBarbeiros = [...barbeiros];\r\n\r\n\r\n    // filter by nome \r\n\r\n    if(nome !== \"\") {\r\n        tempBarbeiros = tempBarbeiros.filter(barbeiro => barbeiro.nome ===\r\n        nome);\r\n    }\r\n\r\n\r\n\r\n    // filter by cidade\r\n    if(cidade !== \"\") {\r\n        tempBarbeiros = tempBarbeiros.filter(barbeiro => barbeiro.cidade ===\r\n        cidade);\r\n    }\r\n\r\n\r\n\r\n    // change state \r\n    this.setState({\r\n        sortedBarbeiros:tempBarbeiros\r\n    })\r\n    };\r\n\r\n\r\n\r\n    filterCabeleireiros = () => {\r\n        let{\r\n            cabeleireiros, \r\n            nome,\r\n            cidade,\r\n        } = this.state\r\n    \r\n    // all the cabeleireiros\r\n    let tempCabeleireiros = [...cabeleireiros];\r\n    \r\n    \r\n    // filter by nome \r\n    \r\n    if(nome !== \"\") {\r\n        tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.nome ===\r\n        nome);\r\n    }\r\n    \r\n    \r\n    \r\n    // filter by cidade\r\n    if(cidade !== \"\") {\r\n        tempCabeleireiros = tempCabeleireiros.filter(cabeleireiro => cabeleireiro.cidade ===\r\n        cidade);\r\n    }\r\n    \r\n    \r\n    \r\n    // change state \r\n    this.setState({\r\n        sortedCabeleireiros:tempCabeleireiros\r\n    })\r\n    };\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n        <CabeleireirosContext.Provider \r\n        value={{\r\n            ...this.state,\r\n            getCabeleireiro: this.getCabeleireiro,\r\n            handleChangeCabeleireiros: this.handleChangeCabeleireiros,\r\n            getBarbeiro: this.getBarbeiro,\r\n            handleChangeBarbeiros: this.handleChangeBarbeiros,\r\n            }}>\r\n            {this.props.children}\r\n        </CabeleireirosContext.Provider>\r\n            \r\n         );\r\n    }\r\n  }\r\n\r\n\r\nconst CabeleireirosConsumer = CabeleireirosContext.Consumer;\r\nexport function withCabeleireirosConsumer(Component){\r\n    return function ConsumerWrapper(props){\r\n        return <CabeleireirosConsumer>\r\n            {value => <Component {...props} context={value} />}\r\n        </CabeleireirosConsumer>\r\n    }\r\n}\r\n\r\nexport { CabeleireirosProvider, CabeleireirosConsumer, CabeleireirosContext };\r\n\r\nexport class withReservasConsumer {\r\n}"]},"metadata":{},"sourceType":"module"}