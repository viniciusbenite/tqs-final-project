{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/tqs-final-project/frontend/src/crud/EditCabeleireiroForm.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst EditCabeleireiroForm = props => {\n  const [cabeleireiro, setCabeleireiro] = useState(props.currentCabeleireiro);\n  useEffect(() => {\n    setCabeleireiro(props.currentCabeleireiro);\n  }, [props]); // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCabeleireiro({ ...cabeleireiro,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      props.updateCabeleireiro(cabeleireiro.id, cabeleireiro);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"nome\",\n    value: cabeleireiro.nome,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"cidade\",\n    value: cabeleireiro.cidade,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Imagem\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"imagem\",\n    value: cabeleireiro.imagem,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    classNome: \"button muted-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Ver servi\\xE7os e calend\\xE1rio configurados\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Update cabeleireiro\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.setEditing(false),\n    classNome: \"button muted-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Cancelar\"));\n};\n\nexport default EditCabeleireiroForm;","map":{"version":3,"sources":["/home/alina/Desktop/tqs-final-project/frontend/src/crud/EditCabeleireiroForm.js"],"names":["React","useState","useEffect","EditCabeleireiroForm","props","cabeleireiro","setCabeleireiro","currentCabeleireiro","handleInputChange","event","name","value","target","preventDefault","updateCabeleireiro","id","nome","cidade","imagem","setEditing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpC,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCL,QAAQ,CAACG,KAAK,CAACG,mBAAP,CAAlD;AAEAL,EAAAA,SAAS,CACP,MAAM;AACJI,IAAAA,eAAe,CAACF,KAAK,CAACG,mBAAP,CAAf;AACD,GAHM,EAIP,CAAEH,KAAF,CAJO,CAAT,CAHoC,CASpC;;AAEA,QAAMI,iBAAiB,GAAGC,KAAK,IAAI;AACjC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AAEAN,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmB,OAACK,IAAD,GAAQC;AAA3B,KAAD,CAAf;AACD,GAJD;;AAMA,sBACE;AACE,IAAA,QAAQ,EAAEF,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACI,cAAN;AAEAT,MAAAA,KAAK,CAACU,kBAAN,CAAyBT,YAAY,CAACU,EAAtC,EAA0CV,YAA1C;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEA,YAAY,CAACW,IAAnD;AAAyD,IAAA,QAAQ,EAAER,iBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAEH,YAAY,CAACY,MAArD;AAA6D,IAAA,QAAQ,EAAET,iBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAEH,YAAY,CAACa,MAArD;AAA6D,IAAA,QAAQ,EAAEV,iBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE;AAAS,IAAA,SAAS,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAbF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhBF,eAiBE;AAAQ,IAAA,OAAO,EAAE,MAAMJ,KAAK,CAACe,UAAN,CAAiB,KAAjB,CAAvB;AAAgD,IAAA,SAAS,EAAC,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CADF;AAuBD,CAxCD;;AA0CA,eAAehB,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst EditCabeleireiroForm = props => {\n  const [ cabeleireiro, setCabeleireiro ] = useState(props.currentCabeleireiro)\n\n  useEffect(\n    () => {\n      setCabeleireiro(props.currentCabeleireiro)\n    },\n    [ props ]\n  )\n  // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setCabeleireiro({ ...cabeleireiro, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateCabeleireiro(cabeleireiro.id, cabeleireiro)\n      }}\n    >\n      <label>Nome</label>\n      <input type=\"text\" name=\"nome\" value={cabeleireiro.nome} onChange={handleInputChange} />\n      <label>Cidade</label>\n      <input type=\"text\" name=\"cidade\" value={cabeleireiro.cidade} onChange={handleInputChange} />\n      <label>Imagem</label>\n      <input type=\"text\" name=\"imagem\" value={cabeleireiro.imagem} onChange={handleInputChange} />\n      <button  classNome=\"button muted-button\">\n        Ver serviços e calendário configurados\n      </button>\n      <button>Update cabeleireiro</button>\n      <button onClick={() => props.setEditing(false)} classNome=\"button muted-button\">\n        Cancelar\n      </button>\n    </form>\n  )\n}\n\nexport default EditCabeleireiroForm\n"]},"metadata":{},"sourceType":"module"}