{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatWeekday = exports.formatShortWeekday = exports.formatYear = exports.formatMonthYear = exports.formatMonth = exports.formatLongDate = exports.formatDate = void 0;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || (0, _getUserLocale[\"default\"])(), options);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatDate = getSafeFormatter(formatDateOptions);\nexports.formatDate = formatDate;\nvar formatLongDate = getSafeFormatter(formatLongDateOptions);\nexports.formatLongDate = formatLongDate;\nvar formatMonth = getSafeFormatter(formatMonthOptions);\nexports.formatMonth = formatMonth;\nvar formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexports.formatMonthYear = formatMonthYear;\nvar formatYear = getSafeFormatter(formatYearOptions);\nexports.formatYear = formatYear;\nvar formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexports.formatShortWeekday = formatShortWeekday;\nvar formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexports.formatWeekday = formatWeekday;","map":{"version":3,"sources":["C:/Users/joaoc/Desktop/TQS/tqs-final-project/frontend/node_modules/react-calendar/dist/umd/shared/dateFormatter.js"],"names":["Object","defineProperty","exports","value","formatWeekday","formatShortWeekday","formatYear","formatMonthYear","formatMonth","formatLongDate","formatDate","_getUserLocale","_interopRequireDefault","require","obj","__esModule","getFormatter","options","locale","date","toLocaleString","toSafeHour","safeDate","Date","setHours","getSafeFormatter","formatDateOptions","day","month","year","formatLongDateOptions","formatMonthOptions","formatMonthYearOptions","formatYearOptions","formatShortWeekdayOptions","weekday","formatWeekdayOptions"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,kBAAR,GAA6BH,OAAO,CAACI,UAAR,GAAqBJ,OAAO,CAACK,eAAR,GAA0BL,OAAO,CAACM,WAAR,GAAsBN,OAAO,CAACO,cAAR,GAAyBP,OAAO,CAACQ,UAAR,GAAqB,KAAK,CAA7K;;AAEA,IAAIC,cAAc,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAA3C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASE,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,WAAOA,IAAI,CAACC,cAAL,CAAoBF,MAAM,IAAI,CAAC,GAAGP,cAAc,CAAC,SAAD,CAAlB,GAA9B,EAAgEM,OAAhE,CAAP;AACD,GAFD;AAGD;AACD;;;;;;;;;;;AAWA,SAASI,UAAT,CAAoBF,IAApB,EAA0B;AACxB,MAAIG,QAAQ,GAAG,IAAIC,IAAJ,CAASJ,IAAT,CAAf;AACA,SAAO,IAAII,IAAJ,CAASD,QAAQ,CAACE,QAAT,CAAkB,EAAlB,CAAT,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0BR,OAA1B,EAAmC;AACjC,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,WAAOH,YAAY,CAACC,OAAD,CAAZ,CAAsBC,MAAtB,EAA8BG,UAAU,CAACF,IAAD,CAAxC,CAAP;AACD,GAFD;AAGD;;AAED,IAAIO,iBAAiB,GAAG;AACtBC,EAAAA,GAAG,EAAE,SADiB;AAEtBC,EAAAA,KAAK,EAAE,SAFe;AAGtBC,EAAAA,IAAI,EAAE;AAHgB,CAAxB;AAKA,IAAIC,qBAAqB,GAAG;AAC1BH,EAAAA,GAAG,EAAE,SADqB;AAE1BC,EAAAA,KAAK,EAAE,MAFmB;AAG1BC,EAAAA,IAAI,EAAE;AAHoB,CAA5B;AAKA,IAAIE,kBAAkB,GAAG;AACvBH,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAGA,IAAII,sBAAsB,GAAG;AAC3BJ,EAAAA,KAAK,EAAE,MADoB;AAE3BC,EAAAA,IAAI,EAAE;AAFqB,CAA7B;AAIA,IAAII,iBAAiB,GAAG;AACtBJ,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAGA,IAAIK,yBAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAAhC;AAGA,IAAIC,oBAAoB,GAAG;AACzBD,EAAAA,OAAO,EAAE;AADgB,CAA3B;AAGA,IAAIzB,UAAU,GAAGe,gBAAgB,CAACC,iBAAD,CAAjC;AACAxB,OAAO,CAACQ,UAAR,GAAqBA,UAArB;AACA,IAAID,cAAc,GAAGgB,gBAAgB,CAACK,qBAAD,CAArC;AACA5B,OAAO,CAACO,cAAR,GAAyBA,cAAzB;AACA,IAAID,WAAW,GAAGiB,gBAAgB,CAACM,kBAAD,CAAlC;AACA7B,OAAO,CAACM,WAAR,GAAsBA,WAAtB;AACA,IAAID,eAAe,GAAGkB,gBAAgB,CAACO,sBAAD,CAAtC;AACA9B,OAAO,CAACK,eAAR,GAA0BA,eAA1B;AACA,IAAID,UAAU,GAAGmB,gBAAgB,CAACQ,iBAAD,CAAjC;AACA/B,OAAO,CAACI,UAAR,GAAqBA,UAArB;AACA,IAAID,kBAAkB,GAAGoB,gBAAgB,CAACS,yBAAD,CAAzC;AACAhC,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;AACA,IAAID,aAAa,GAAGqB,gBAAgB,CAACW,oBAAD,CAApC;AACAlC,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatWeekday = exports.formatShortWeekday = exports.formatYear = exports.formatMonthYear = exports.formatMonth = exports.formatLongDate = exports.formatDate = void 0;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || (0, _getUserLocale[\"default\"])(), options);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatDate = getSafeFormatter(formatDateOptions);\nexports.formatDate = formatDate;\nvar formatLongDate = getSafeFormatter(formatLongDateOptions);\nexports.formatLongDate = formatLongDate;\nvar formatMonth = getSafeFormatter(formatMonthOptions);\nexports.formatMonth = formatMonth;\nvar formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexports.formatMonthYear = formatMonthYear;\nvar formatYear = getSafeFormatter(formatYearOptions);\nexports.formatYear = formatYear;\nvar formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexports.formatShortWeekday = formatShortWeekday;\nvar formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexports.formatWeekday = formatWeekday;"]},"metadata":{},"sourceType":"script"}