{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaoc\\\\Desktop\\\\TQS\\\\tqs-final-project\\\\frontend\\\\src\\\\pages\\\\Reservas.js\";\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport NavbarDono from \"../components/NavbarDono\";\nimport api from \"../services/api\";\nimport NavbarCliente from \"../components/NavbarCliente\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    opacity: 1,\n    flexDirection: 'column'\n  },\n  cardDone: {\n    height: '100%',\n    display: 'flex',\n    opacity: 0.4,\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '0%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\nconst cards = [1, 2, 3, 4];\nconst isDone = [true, false, false, false];\nconst classes = useStyles;\nexport default class Album extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reservas: []\n    };\n  }\n\n  componentDidMount() {\n    this.GetReservations();\n  }\n\n  GetReservations() {\n    api.get(\"/reservation\").then(res => {\n      let dataRes = res.data;\n\n      for (const n in dataRes) {\n        if (dataRes[n].users.email == localStorage.getItem(\"user_email\")) {\n          this.setState(prevState => ({\n            reservas: [...prevState.reservas, dataRes[n]]\n          }));\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavbarCliente, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.heroContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      align: \"center\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      align: \"center\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Minhas Reservas:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.heroButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, this.state.reservas.map((e, key) => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: key,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: isDone[cards.indexOf(key)] ? classes.cardDone : classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      component: \"img\",\n      className: classes.cardMedia,\n      src: require('../images/cabeleireiro1.jpg'),\n      title: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 27\n      }\n    }, e.service.saloon.name, \" - \", e.service.saloon.city), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }\n    }, \"Data: \", e.date), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }, \"Hora: \", e.time), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }, \"Servi\\xE7o: \", e.service.name), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 27\n      }\n    }, \"---------\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 27\n      }\n    }, \"Delete\")))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/joaoc/Desktop/TQS/tqs-final-project/frontend/src/pages/Reservas.js"],"names":["React","Component","Card","CardContent","CardMedia","CssBaseline","Grid","Typography","makeStyles","Container","NavbarDono","api","NavbarCliente","Button","useStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","opacity","flexDirection","cardDone","cardMedia","cardContent","flexGrow","footer","cards","isDone","classes","Album","state","reservas","componentDidMount","GetReservations","get","then","res","dataRes","data","n","users","email","localStorage","getItem","setState","prevState","render","map","e","key","indexOf","require","service","saloon","name","city","date","time"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport NavbarDono from \"../components/NavbarDono\";\r\nimport api from \"../services/api\";\r\nimport NavbarCliente from \"../components/NavbarCliente\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    opacity: 1,\r\n    flexDirection: 'column',\r\n  },\r\n  cardDone: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    opacity: 0.4,\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '0%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst cards = [1, 2, 3, 4];\r\nconst isDone=[true,false,false,false];\r\nconst classes = useStyles;\r\n\r\nexport default class Album extends Component{\r\n\r\n  state={\r\n    reservas: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.GetReservations();\r\n  }\r\n  GetReservations() {\r\n    api.get(\"/reservation\").then(res => {\r\n      let dataRes = res.data;\r\n      for (const n in dataRes) {\r\n        if(dataRes[n].users.email == localStorage.getItem(\"user_email\")){\r\n          this.setState(prevState =>({\r\n            reservas: [...prevState.reservas, dataRes[n]]\r\n          }))\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <NavbarCliente></NavbarCliente>\r\n          <CssBaseline />\r\n\r\n          <main>\r\n\r\n            {/* Hero unit */}\r\n            <div className={classes.heroContent}>\r\n              <Container maxWidth=\"sm\">\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                </Typography>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                  Minhas Reservas:\r\n                </Typography>\r\n                <div className={classes.heroButtons}>\r\n\r\n                </div>\r\n              </Container>\r\n            </div>\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n              {/* End hero unit */}\r\n              <Grid container spacing={4}>\r\n                {this.state.reservas.map((e,key) => (\r\n                    <Grid item key={key} xs={12} sm={6} md={3}>\r\n\r\n                      <Card className= {isDone[cards.indexOf(key)]?classes.cardDone:classes.card}>\r\n\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            className={classes.cardMedia}\r\n\r\n                            src={require('../images/cabeleireiro1.jpg')}\r\n                            title=\"\"\r\n\r\n\r\n                        />\r\n\r\n                        <CardContent className={classes.cardContent}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {e.service.saloon.name} - {e.service.saloon.city}\r\n                          </Typography>\r\n                          <Typography>\r\n                            Data: {e.date}\r\n                          </Typography>\r\n                          <Typography>\r\n                            Hora: {e.time}\r\n                          </Typography>\r\n                          <Typography>\r\n                            Serviço: {e.service.name}\r\n                          </Typography>\r\n                          <Typography align={\"center\"}>\r\n                            ---------\r\n                          </Typography>\r\n                          <Button variant=\"primary\">Delete</Button>\r\n\r\n                        </CardContent>\r\n\r\n\r\n\r\n                      </Card>\r\n                    </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Container>\r\n          </main>\r\n\r\n        </React.Fragment>\r\n    )};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}