{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaoc\\\\Desktop\\\\TQS\\\\tqs-final-project\\\\frontend\\\\src\\\\crud\\\\EditCabeleireiroForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport api from \"../services/api\";\n\nconst EditCabeleireiroForm = props => {\n  const [cabeleireiro, setCabeleireiro] = useState(props.currentCabeleireiro);\n  const [services, setServices] = React.useState({\n    cortes: false,\n    manicure_pedicure: false,\n    escovas: false,\n    tratamento_capilar: false,\n    serviços_especiais: false,\n    depilacao: false,\n    maquilhagem: false,\n    quimicas: false\n  });\n  const [hours, setHours] = React.useState({\n    cortes: [],\n    manicure_pedicure: [],\n    escovas: [],\n    tratamento_capilar: [],\n    serviços_especiais: [],\n    depilacao: [],\n    maquilhagem: [],\n    quimicas: []\n  });\n  useEffect(() => {\n    setCabeleireiro(props.currentCabeleireiro);\n  }, [props]); // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  const handleToggle = ({\n    target\n  }) => setServices(s => ({ ...s,\n    [target.name]: !s[target.name]\n  }));\n\n  const handleHourChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setHours({ ...hours,\n      [name]: value.split(\",\")\n    });\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCabeleireiro({ ...cabeleireiro,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      console.log(cabeleireiro);\n      api.get(\"/user/\").then(function (response) {\n        let data = response.data;\n        let res;\n\n        for (const i in data) {\n          for (const n in data[i]) {\n            if (data[i].email === localStorage.getItem(\"user_email\")) {\n              res = data[i];\n            }\n          }\n        }\n\n        props.updateCabeleireiro(cabeleireiro.id, cabeleireiro);\n        api.put(\"/saloon/\" + cabeleireiro.id, cabeleireiro).then();\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: cabeleireiro.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"postalCode\",\n    value: cabeleireiro.postalCode,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"city\",\n    value: cabeleireiro.city,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"country\",\n    value: cabeleireiro.country,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"status\",\n    value: cabeleireiro.status,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"type\",\n    value: cabeleireiro.type,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Contact\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"contact\",\n    value: cabeleireiro.contact,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    value: cabeleireiro.description,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    value: cabeleireiro.address,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Pick your services\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.cortes,\n      onChange: handleToggle,\n      name: \"cortes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 22\n      }\n    }),\n    label: \"Cortes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"cortes\",\n    value: hours.cortes,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.manicure_pedicure,\n      onChange: handleToggle,\n      name: \"manicure_pedicure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 22\n      }\n    }),\n    label: \"Manicure Pedicure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"manicure_pedicure\",\n    value: hours.manicure_pedicure,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.escovas,\n      onChange: handleToggle,\n      name: \"escovas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 22\n      }\n    }),\n    label: \"Escovas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"escovas\",\n    value: hours.escovas,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.tratamento_capilar,\n      onChange: handleToggle,\n      name: \"tratamento_capilar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 22\n      }\n    }),\n    label: \"Tratamento Capilar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"tratamento_capilar\",\n    value: hours.tratamento_capilar,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.serviços_especiais,\n      onChange: handleToggle,\n      name: \"servi\\xE7os_especiais\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 22\n      }\n    }),\n    label: \"Servi\\xE7os Especiais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"servi\\xE7os_especiais\",\n    value: hours.serviços_especiais,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.depilacao,\n      onChange: handleToggle,\n      name: \"depilacao\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 22\n      }\n    }),\n    label: \"Depila\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"depilacao\",\n    value: hours.depilacao,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.maquilhagem,\n      onChange: handleToggle,\n      name: \"maquilhagem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 22\n      }\n    }),\n    label: \"Maquilhagem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"maquilhagem\",\n    value: hours.maquilhagem,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: services.quimicas,\n      onChange: handleToggle,\n      name: \"quimicas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 22\n      }\n    }),\n    label: \"Quimicas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"quimicas\",\n    value: hours.quimicas,\n    onChange: handleHourChange,\n    placeholder: \"Type your available schedules(09:00:00 P ex.)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Editar cabeleireiro\"));\n};\n\nexport default EditCabeleireiroForm;","map":{"version":3,"sources":["C:/Users/joaoc/Desktop/TQS/tqs-final-project/frontend/src/crud/EditCabeleireiroForm.js"],"names":["React","useState","useEffect","FormGroup","FormControlLabel","Checkbox","api","EditCabeleireiroForm","props","cabeleireiro","setCabeleireiro","currentCabeleireiro","services","setServices","cortes","manicure_pedicure","escovas","tratamento_capilar","serviços_especiais","depilacao","maquilhagem","quimicas","hours","setHours","handleToggle","target","s","name","handleHourChange","event","value","split","handleInputChange","preventDefault","console","log","get","then","response","data","res","i","n","email","localStorage","getItem","updateCabeleireiro","id","put","postalCode","city","country","status","type","contact","description","address"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport api from \"../services/api\";\r\n\r\nconst EditCabeleireiroForm = props => {\r\n  const [ cabeleireiro, setCabeleireiro ] = useState(props.currentCabeleireiro)\r\n\r\n  const [services, setServices] = React.useState({\r\n    cortes: false,\r\n    manicure_pedicure: false,\r\n    escovas: false,\r\n    tratamento_capilar: false,\r\n    serviços_especiais: false,\r\n    depilacao: false,\r\n    maquilhagem: false,\r\n    quimicas: false,\r\n  });\r\n  const [hours, setHours] = React.useState({\r\n    cortes: [],\r\n    manicure_pedicure: [],\r\n    escovas: [],\r\n    tratamento_capilar: [],\r\n    serviços_especiais: [],\r\n    depilacao: [],\r\n    maquilhagem: [],\r\n    quimicas: [],\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      setCabeleireiro(props.currentCabeleireiro)\r\n    },\r\n    [ props ]\r\n  )\r\n  // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\r\n\r\n  const handleToggle = ({ target }) =>\r\n      setServices(s => ({ ...s, [target.name]: !s[target.name] }));\r\n\r\n  const handleHourChange = event => {\r\n    const { name, value } = event.target\r\n    setHours({ ...hours, [name]: value.split(\",\")  });\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCabeleireiro({ ...cabeleireiro, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault()\r\n\r\n        console.log(cabeleireiro)\r\n        api.get(\"/user/\").then(function (response) {\r\n          let data = response.data;\r\n          let res;\r\n          for (const i in data) {\r\n            for (const n in data[i]) {\r\n              if (data[i].email === localStorage.getItem(\"user_email\")) {\r\n                res = data[i];\r\n              }\r\n            }\r\n          }\r\n          props.updateCabeleireiro(cabeleireiro.id, cabeleireiro)\r\n          api.put(\"/saloon/\" + cabeleireiro.id, cabeleireiro).then()\r\n        })\r\n      }}\r\n    >\r\n      <label>Nome</label>\r\n      <input type=\"text\" name=\"name\" value={cabeleireiro.name} onChange={handleInputChange} />\r\n      <label>Postal Code</label>\r\n      <input type=\"text\" name=\"postalCode\" value={cabeleireiro.postalCode} onChange={handleInputChange} />\r\n      <label>Cidade</label>\r\n      <input type=\"text\" name=\"city\" value={cabeleireiro.city} onChange={handleInputChange} />\r\n      <label>Country</label>\r\n      <input type=\"text\" name=\"country\" value={cabeleireiro.country} onChange={handleInputChange} />\r\n      <label>Status</label>\r\n      <input type=\"text\" name=\"status\" value={cabeleireiro.status} onChange={handleInputChange} />\r\n      <label>Type</label>\r\n      <input type=\"text\" name=\"type\" value={cabeleireiro.type} onChange={handleInputChange} />\r\n      <label>Contact</label>\r\n      <input type=\"text\" name=\"contact\" value={cabeleireiro.contact} onChange={handleInputChange} />\r\n      <label>Description</label>\r\n      <input type=\"text\" name=\"description\" value={cabeleireiro.description} onChange={handleInputChange} />\r\n      <label>Address</label>\r\n      <input type=\"text\" name=\"address\" value={cabeleireiro.address} onChange={handleInputChange} />\r\n      <label>Pick your services</label>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.cortes} onChange={handleToggle} name=\"cortes\" />}\r\n            label=\"Cortes\"\r\n        />\r\n        <input type=\"text\" name=\"cortes\" value={hours.cortes} onChange={handleHourChange}  placeholder=\"Type your available schedules(09:00:00 P ex.)\"/>\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.manicure_pedicure} onChange={handleToggle} name=\"manicure_pedicure\" />}\r\n            label=\"Manicure Pedicure\"\r\n        />\r\n        <input type=\"text\" name=\"manicure_pedicure\" value={hours.manicure_pedicure} onChange={handleHourChange} placeholder=\"Type your available schedules(09:00:00 P ex.)\" />\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.escovas} onChange={handleToggle} name=\"escovas\" />}\r\n            label=\"Escovas\"\r\n        />\r\n        <input type=\"text\" name=\"escovas\" value={hours.escovas} onChange={handleHourChange} placeholder=\"Type your available schedules(09:00:00 P ex.)\" />\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.tratamento_capilar} onChange={handleToggle} name=\"tratamento_capilar\" />}\r\n            label=\"Tratamento Capilar\"\r\n        />\r\n        <input type=\"text\" name=\"tratamento_capilar\" value={hours.tratamento_capilar} onChange={handleHourChange} placeholder=\"Type your available schedules(09:00:00 P ex.)\" />\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.serviços_especiais} onChange={handleToggle} name=\"serviços_especiais\" />}\r\n            label=\"Serviços Especiais\"\r\n        />\r\n        <input type=\"text\" name=\"serviços_especiais\" value={hours.serviços_especiais} onChange={handleHourChange} placeholder=\"Type your available schedules(09:00:00 P ex.)\" />\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.depilacao} onChange={handleToggle} name=\"depilacao\" />}\r\n            label=\"Depilação\"\r\n        />\r\n        <input type=\"text\" name=\"depilacao\" value={hours.depilacao} onChange={handleHourChange} placeholder=\"Type your available schedules(09:00:00 P ex.)\" />\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.maquilhagem} onChange={handleToggle} name=\"maquilhagem\" />}\r\n            label=\"Maquilhagem\"\r\n        />\r\n        <input type=\"text\" name=\"maquilhagem\" value={hours.maquilhagem} onChange={handleHourChange} placeholder=\"Type your available schedules(09:00:00 P ex.)\" />\r\n        <FormControlLabel\r\n            control={<Checkbox checked={services.quimicas} onChange={handleToggle} name=\"quimicas\" />}\r\n            label=\"Quimicas\"\r\n        />\r\n        <input type=\"text\" name=\"quimicas\" value={hours.quimicas} onChange={handleHourChange} placeholder=\"Type your available schedules(09:00:00 P ex.)\" />\r\n      </FormGroup>\r\n      <button>Editar cabeleireiro</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EditCabeleireiroForm\r\n"]},"metadata":{},"sourceType":"module"}