{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/UA-3ANO/TQS/projeto_final/tqs-final-project/frontend/src/pages/Users.js\";\nimport React from 'react';\nexport default function Users() {\n  const classes = useStyles();\n  const [data, upDateData] = React.useState([]);\n  const [firstLoad, setLoad] = React.useState(true);\n  let isLoading = true;\n\n  async function sampleFunc() {\n    let response = await fetch(\"/users/all\");\n    let body = await response.json();\n    upDateData(body);\n  }\n\n  if (firstLoad) {\n    sampleFunc();\n    setLoad(false);\n  }\n\n  if (data.length > 0) isLoading = false;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"User\"), isLoading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(TableContainer, {\n    style: {\n      width: \"80%\",\n      margin: \"0 10px\"\n    },\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, \"Type\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, data.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, row.email), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, row.type)))))), /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Head back to save data\")));\n}","map":{"version":3,"sources":["/home/alina/Desktop/UA-3ANO/TQS/projeto_final/tqs-final-project/frontend/src/pages/Users.js"],"names":["React","Users","classes","useStyles","data","upDateData","useState","firstLoad","setLoad","isLoading","sampleFunc","response","fetch","body","json","length","paper","width","margin","Paper","table","map","row","name","email","type","link"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nexport default function Users() {\n    const classes = useStyles();\n  \n    const [data, upDateData] = React.useState([]);\n    const [firstLoad, setLoad] = React.useState(true);\n    let isLoading = true;\n  \n    async function sampleFunc() {\n      let response = await fetch(\"/users/all\");\n      let body = await response.json();\n      upDateData(body);\n    }\n  \n    if (firstLoad) {\n      sampleFunc();\n      setLoad(false);\n    }\n  \n    if (data.length > 0) isLoading = false;\n  \n    return (\n      <div className={classes.paper}>\n        \n        <Typography component=\"h1\" variant=\"h5\">\n          User\n        </Typography>\n  \n        {isLoading ? (\n          <CircularProgress />\n        ) : (\n          <TableContainer\n            style={{ width: \"80%\", margin: \"0 10px\" }}\n            component={Paper}\n          >\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Name</TableCell>\n                  <TableCell align=\"center\">E-mail</TableCell>\n                  <TableCell align=\"center\">Type</TableCell>\n            \n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map(row => (\n                  <TableRow key={row.name}>\n                    <TableCell align=\"center\">{row.name}</TableCell>\n                    <TableCell align=\"center\">{row.email}</TableCell>\n                    <TableCell align=\"center\">{row.type}</TableCell>\n                 \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n        <Link className={classes.link} to=\"/\">\n          <Typography align=\"left\">\n            &#x2190; Head back to save data\n          </Typography>\n        </Link>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}